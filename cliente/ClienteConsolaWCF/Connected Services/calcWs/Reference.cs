//------------------------------------------------------------------------------
// <auto-generated>
//     Este código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações a este ficheiro poderão provocar um comportamento incorrecto e perder-se-ão se
//     o código for regenerado.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteConsolaWCF.calcWs {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="calcWs.ICalcService")]
    public interface ICalcService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/Sum", ReplyAction="http://tempuri.org/ICalcService/SumResponse")]
        int Sum(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/Sum", ReplyAction="http://tempuri.org/ICalcService/SumResponse")]
        System.Threading.Tasks.Task<int> SumAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/Sub", ReplyAction="http://tempuri.org/ICalcService/SubResponse")]
        int Sub(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/Sub", ReplyAction="http://tempuri.org/ICalcService/SubResponse")]
        System.Threading.Tasks.Task<int> SubAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/Div", ReplyAction="http://tempuri.org/ICalcService/DivResponse")]
        double Div(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/Div", ReplyAction="http://tempuri.org/ICalcService/DivResponse")]
        System.Threading.Tasks.Task<double> DivAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/Mult", ReplyAction="http://tempuri.org/ICalcService/MultResponse")]
        int Mult(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/Mult", ReplyAction="http://tempuri.org/ICalcService/MultResponse")]
        System.Threading.Tasks.Task<int> MultAsync(int x, int y);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalcServiceChannel : ClienteConsolaWCF.calcWs.ICalcService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalcServiceClient : System.ServiceModel.ClientBase<ClienteConsolaWCF.calcWs.ICalcService>, ClienteConsolaWCF.calcWs.ICalcService {
        
        public CalcServiceClient() {
        }
        
        public CalcServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalcServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalcServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalcServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Sum(int x, int y) {
            return base.Channel.Sum(x, y);
        }
        
        public System.Threading.Tasks.Task<int> SumAsync(int x, int y) {
            return base.Channel.SumAsync(x, y);
        }
        
        public int Sub(int x, int y) {
            return base.Channel.Sub(x, y);
        }
        
        public System.Threading.Tasks.Task<int> SubAsync(int x, int y) {
            return base.Channel.SubAsync(x, y);
        }
        
        public double Div(int x, int y) {
            return base.Channel.Div(x, y);
        }
        
        public System.Threading.Tasks.Task<double> DivAsync(int x, int y) {
            return base.Channel.DivAsync(x, y);
        }
        
        public int Mult(int x, int y) {
            return base.Channel.Mult(x, y);
        }
        
        public System.Threading.Tasks.Task<int> MultAsync(int x, int y) {
            return base.Channel.MultAsync(x, y);
        }
    }
}
